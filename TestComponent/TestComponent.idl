import "oaidl.idl";
import "ocidl.idl";


[object,
 oleautomation, // use "automation" marshaler (oleaut32.dll)
 uuid(54E049DB-C39C-4025-B1EF-2FC0E5246277),
 helpstring("Shared memory handle.")]
interface IDataHandle : IUnknown {
    [helpstring("Get shared-mem segment address & size. The data might not be writable. Lifetime is managed by IDataHandle object.")]
    HRESULT GetData ([out] BYTE ** buffer, [out] unsigned int * size);
};


[object,
 oleautomation, // use "automation" marshaler (oleaut32.dll)
 uuid(7D278258-3B05-45D3-AD60-CF65497B56B6),
 helpstring("Interface for exchanging data over shared memory.")]
interface ISharedMem : IUnknown {
    [helpstring("Get handle to a shared-mem segment. Can be mapped as read-only or read/write.")]
    HRESULT GetHandle([in] BOOL writable, [out, retval] IDataHandle **obj);

    HRESULT EnableLeakCheck([in] BOOL enable);
};



[version(1.0),
 uuid(8E42F33F-E5E3-46B4-8B39-0A03DCF338CC),
 helpstring("TestComponent module")]
library TestComponent {
    importlib("stdole2.tlb");

    [version(1.0),
     uuid(B7B84F73-8638-4EE5-A486-2C9455C0CD2B),
     helpstring("Class for testing shared memory")]
    coclass DataHandle {
        [default] interface IDataHandle;
        interface IMarshal;
    };

    [version(1.0),
        uuid(D84F768B-55F6-4B3A-AF68-9276C9488696),
        helpstring("Class for testing shared memory")]
    coclass DataHandleProxy {
        [default] interface IDataHandle;
        interface IMarshal;
    };

    [version(1.0),
     uuid(C8767698-8297-4BE1-904E-FC25034851D2),
     helpstring("Class for testing shared memory")]
    coclass DataCollection {
        [default] interface ISharedMem;
    };
};
